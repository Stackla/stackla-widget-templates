name: CI

permissions:
  contents: write
  packages: read
  actions: write
  id-token: write

env:
  GH_TOKEN: ${{ github.token }}
  NODE_AUTH_TOKEN: ${{secrets.STACKLA_BOT_GITHUB_TOKEN}}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  VISUAL_REGRESSION_TYPE: regression

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    env:
      NODE_AUTH_TOKEN: ${{secrets.STACKLA_BOT_GITHUB_TOKEN}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck
      - name: Test
        run: npm test
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        containers: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Cache cypress binary
        id: cypress-cache
        uses: actions/cache@v4
        with:
          path: "~/.cache/Cypress"
          key: ${{ runner.OS }}-cypress-cache-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install cypress
        run: npx cypress install
      - name: Cypress run e2e tests
        uses: cypress-io/github-action@v6
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          DEBUG: cypress-split
        with:
          start: npm run start:test
          wait-on: "http://localhost:4002/preview?widgetType=carousel"
          browser: chrome
          install: true
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
  trigger_deploy:
    if: github.ref == 'refs/heads/master'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: trigger deploy
        run: gh workflow run release --ref master -F environment=staging
