name: CI

permissions:
  contents: write
  packages: read
  actions: write
  id-token: write

env:
  GH_TOKEN: ${{ github.token }}
  NODE_AUTH_TOKEN: ${{secrets.STACKLA_BOT_GITHUB_TOKEN}}

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    env:
      NODE_AUTH_TOKEN: ${{secrets.STACKLA_BOT_GITHUB_TOKEN}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck
      - name: Test
        run: npm test
  playwright-run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      - name: Get uuid
        id: uuid-gen
        run: |
          result=$(uuidgen)
          echo "uuid=$result" >> $GITHUB_OUTPUT
      - name: Run Playwright tests (sharded)
        run: npm run test:playwright -- --shard=${{ matrix.shard }}/3
      - name: Upload Playwright artifact
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ steps.uuid-gen.outputs.uuid }}-shard-${{ matrix.shard }}
          path: playwright-report/
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ steps.uuid-gen.outputs.uuid }}-shard-${{ matrix.shard }}
          path: test-results/
          if-no-files-found: ignore
  trigger_deploy:
    if: github.ref == 'refs/heads/master'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: trigger deploy
        run: gh workflow run release --ref master -F environment=staging
