@use "sass:string";
@use "@styles/partials/media-queries";

// style placeholder
%tags-styles-ph {
  --swiper-navigation-sides-offset: 0;
  --swiper-navigation-top-offset: 0;

  display: flex;
  position: relative;
  width: calc(90% - 15px);

  .mask-left {
    mask-image: linear-gradient(to right, transparent 5%, black 15%);
  }

  .mask-right {
    mask-image: linear-gradient(to left, transparent 5%, black 15%);
  }

  .mask-both {
    mask-image: linear-gradient(to right, transparent 5%, black 15%, black 85%, transparent 95%)
  }

  .swiper-tags {
    display: var(--tags-display);
    max-width: calc(100% - 10px);
  }

  :has(.swiper-tags-button-prev:not([style*="display: none"])) {
    .swiper-tags {
      max-width: calc(100% - 30px);
    }
  }

  .swiper-tags-button-prev::after,
  .swiper-tags-button-next::after {
    content: "";
  }

  .tile-tags-wapper {
    display: var(--tags-display);
    flex-direction: column;
    width: 100%;

    .tile-tags {
      display: flex;
      align-items: center;
      z-index: 2;
      flex-direction: row;
      gap: var(--tags-gap);
    }
  }

  .tile-tags-wapper .tile-tag,
  .swiper-tags .swiper-slide {
    display: inline-flex;
    background: var(--tile-tag-background, color(srgb 0.74 0.73 0.74));
    border-radius: 3px;
    font-size: 10px;
    font-style: normal;
    font-weight: 400;
    padding: 2px 4px;
    line-height: 16px;
    text-wrap: nowrap;
    min-width: fit-content;

    a {
      color: var(--text-tile-tag-font-color);
      text-decoration: none;

      .tag-title {
        margin: 0 6px;
        display: flex;
      }
    }
  }

  .tile-tags-wapper .tile-tag {
    padding: 2px 4px;
  }

  .swiper-tags .swiper-slide {
    padding: 2px 0;
  }

  &[variant="dark"] {
    .tile-tags .tile-tag,
    .swiper-tags .swiper-slide {
      background: var(--tile-tag-inline-background, color(srgb 0 0 0 / 40%));
      border-radius: 25px;
      line-height: 12px;

      a {
        color: #fff;
      }
    }
  }
}

@mixin tile-tags-styles($parent: null) {
  // if parent selector is supplied use it
  @if $parent {
    #{string.unquote($parent) tile-tags} {
      &[context="expanded"] {
        width: 95%;
        margin-bottom: 10px;
      }

      @extend %tags-styles-ph;

      // any style overrides
      @content;
    }
  } @else {
    // dynamically determine the parent selector if available
    #{if(&, "& tile-tags", "tile-tags")} {
      &[context="expanded"] {
        width: 95%;
        margin-bottom: 10px;
      }

      @extend %tags-styles-ph;

      // any style overrides
      @content;
    }
  }
}
