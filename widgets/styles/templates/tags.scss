@use "sass:string";
@use "@styles/partials/media-queries";

// style placeholder
%tags-styles-ph {
  width: 100%;
  display: flex;

  .tile-tags {
    bottom: 0;
    display: flex;
    align-items: center;
    gap: var(--tags-gap);
    list-style: none;
    mask-image: linear-gradient(to left, transparent 5%, black 15%);
    overflow-y: auto;
    padding: 0;
    scrollbar-width: none;
    z-index: 2;
    flex-wrap: wrap;

    .tile-tag {
      background: var(--tile-tag-background, color(srgb 0.74 0.73 0.74));
      border-radius: 3px;
      font-size: 10px;
      font-style: normal;
      font-weight: 400;
      padding: 2px 4px;
      line-height: 16px;
      text-wrap: nowrap;

      a {
        color: var(--text-tile-tag-font-color);
        text-decoration: none;
      }
    }
  }

  &[variant="dark"] {
    .tile-tags .tile-tag {
      background: var(--tile-tag-inline-background, color(srgb 0 0 0 / 40%));
      border-radius: 25px;
      line-height: 12px;

      a {
        color: #fff;
      }
    }
  }
}

@mixin tile-tags-styles($parent: null) {
  /* if parent selector is supplied use it */
  @if $parent {
    #{string.unquote($parent) tile-tags} {
      @extend %tags-styles-ph;
    }
  } @else {
    /* dynamically determine the parent selector if available */
    #{if(&, "& tile-tags", "tile-tags")} {
      @extend %tags-styles-ph;
    }
  }

  /* any style overrides */
  @content;
}
