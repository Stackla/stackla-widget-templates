@use "sass:string";
@use "@styles/partials/media-queries";

// style placeholder
%tags-styles-ph {
  --swiper-navigation-sides-offset: 0;
  --swiper-navigation-top-offset: 3px;
  
  align-items: center;
  display: var(--tags-display-inline);
  position: relative;
  overflow: hidden;
  width: 100%;

  .swiper-slide {
      height: 100% !important;
  }

  &[context="expanded"] {
    display: var(--tags-display-expanded);
    overflow: visible;
  }

  .mask-left {
    mask-image: linear-gradient(to right, transparent 10%, black 25%);
  }

  .mask-right {
    mask-image: linear-gradient(to left, transparent 10%, black 25%);
  }

  .mask-both {
    mask-image: linear-gradient(to right, transparent 5%, black 15%, black 85%, transparent 95%);
  }

  &[context*="inline"] {
    .swiper-tags {
      margin-left: initial;
      width: 100%;
    }
  }

  &[context*="inline"][navigation-arrows="true"] {
    .swiper-tags {
      width: 100%;
    }
  }

  &:has(.swiper-tags-button-prev:not(.swiper-button-disabled)) {
    .swiper-tags {
      mask-image: linear-gradient(to right, transparent 5%, black 25%);
    }
  }

  &:has(.swiper-tags-button-next:not(.swiper-button-disabled)) {
    .swiper-tags {
      mask-image: linear-gradient(to left, transparent 5%, black 25%);
    }
  }

  &:has(.swiper-tags-button-prev:not(.swiper-button-disabled)):has(
      .swiper-tags-button-next:not(.swiper-button-disabled)
    ) {
    .swiper-tags {
      mask-image: linear-gradient(to right, transparent 5%, black 15%, black 85%, transparent 95%);
    }
  }

  .swiper-button-disabled {
    display: none;
  }

  .swiper-tags-button-prev,
  .swiper-tags-button-next {
    position: relative;

    .swiper-nav-icon {
      width: 12px;
      height: 12px;
    }
  }

  .swiper-tags-button-prev::after,
  .swiper-tags-button-next::after {
    content: "";
  }

  .tile-tags-wapper {
    flex-direction: column;
    width: 100%;

    .tile-tags {
      display: var(--tags-display-inline);
      align-items: center;
      z-index: 2;
      flex-direction: row;
      gap: var(--tags-gap);
    }
  }

  .tile-tags-wapper .tile-tag,
  .swiper-tags .swiper-slide {
    display: inline-flex;
    background: var(--tile-tag-background, '#D6D4D5');
    border-radius: 3px;
    font-size: 10px;
    font-style: normal;
    font-weight: 400;
    line-height: 16px;
    text-wrap: nowrap;
    max-width: fit-content;

    a {
      color: #000;
      text-decoration: none;

      .tag-title {
        margin: 0 6px;
        display: flex;
      }
    }
  }

  &[variation="small"][context*="inline"] {
    .swiper-tags .swiper-slide {
      max-width: 100%;
    }
  }

  &[variant="dark"] {
    .tile-tags .tile-tag,
    .swiper-tags .swiper-slide {
      background: var(--tile-tag-inline-background, color(srgb 0 0 0 / 40%));
      border-radius: 25px;
      line-height: 12px;

      a {
        color: #fff;
      }
    }
  }
}

@mixin tile-tags-styles($parent: null) {
  // if parent selector is supplied use it
  @if $parent {
    #{string.unquote($parent) tile-tags} {
      @extend %tags-styles-ph;

      // any style overrides
      @content;
    }
  } @else {
    // dynamically determine the parent selector if available
    #{if(&, "& tile-tags", "tile-tags")} {
      @extend %tags-styles-ph;

      // any style overrides
      @content;
    }
  }
}
